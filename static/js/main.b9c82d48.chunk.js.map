{"version":3,"sources":["images/clearday.jpg","images/clearnight.JPG","images/thunder.JPG","images/drizzleday.JPG","images/drizzlenight.JPG","images/rainday.JPG","images/rainnight.JPG","images/snowday.JPG","images/snownight.JPG","images/cloudday.JPG","images/cloudnight.JPG","components/Spinner.js","components/Weather.js","components/App.js","index.js"],"names":["module","exports","style","backgroundColor","color","height","display","justifyContent","alignItems","Spinner","props","message","time","Date","getHours","today","options","weekday","month","day","icon","background","backgroundImage","undefined","Weather","condition","thunder","drizzleday","drizzlenight","rainday","rainnight","snowday","snownight","cloudday","cloudnight","clearday","clearnight","className","toLocaleDateString","city","Math","round","high","low","temperature","feels","description","App","state","lat","lon","errorMessage","humidity","componentDidUpdate","e","a","async","fetch","apiCall","json","data","setState","name","main","temp","temp_max","temp_min","feels_like","weather","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,wLCErCC,EAAQ,CACZC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAOCC,EAJC,SAAAC,GACd,OAAO,yBAAKR,MAAOA,GAAQQ,EAAMC,U,sMCG7BC,GAAO,IAAIC,MAAOC,WAClBC,EAAQ,IAAIF,KACZG,EAAU,CACdC,QAAS,OACTC,MAAO,OACPC,IAAK,WAEHC,EAAO,GACPC,EAAa,CAAEC,gBAAgB,OAAD,YAASC,EAAT,MAiFnBC,EA/EC,SAAAd,GA8Cd,MA7CwB,iBAApBA,EAAMe,WACRL,EAAO,cACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASI,IAAT,OACD,YAApBhB,EAAMe,UACXb,GAAQ,GAAKA,GAAQ,IACvBQ,EAAO,mBACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASK,IAAT,QAE9BP,EAAO,yBACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASM,IAAT,OAEH,SAApBlB,EAAMe,UACXb,GAAQ,GAAKA,GAAQ,IACvBQ,EAAO,6BACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASO,IAAT,QAE9BT,EAAO,yBACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASQ,IAAT,OAEH,SAApBpB,EAAMe,UACXb,GAAQ,GAAKA,GAAQ,IACvBQ,EAAO,mBACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASS,IAAT,QAE9BX,EAAO,mBACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASU,IAAT,OAEH,WAApBtB,EAAMe,UACXb,GAAQ,GAAKA,GAAQ,IACvBQ,EAAO,eACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASW,IAAT,QAE9Bb,EAAO,oBACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASY,IAAT,OAG5BtB,GAAQ,GAAKA,GAAQ,IACvBQ,EAAO,aACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASa,IAAT,QAE9Bf,EAAO,cACPC,EAAa,CAAEC,gBAAgB,OAAD,OAASc,IAAT,OAKhC,yBAAKC,UAAU,YAAYnC,MAAOmB,GAChC,yBAAKgB,UAAU,QACb,yBAAKA,UAAU,QACb,2BAAItB,EAAMuB,mBAAmB,QAAStB,KAExC,yBAAKqB,UAAU,WACb,yBAAKA,UAAU,QACb,4BAAK3B,EAAM6B,OAEb,yBAAKF,UAAU,YACb,oCACSG,KAAKC,MAAM/B,EAAMgC,MAD1B,WACyCF,KAAKC,MAAM/B,EAAMiC,OAG5D,yBAAKN,UAAU,eACb,4BAAKG,KAAKC,MAAM/B,EAAMkC,aAAtB,UAEF,yBAAKP,UAAU,SACb,0CAAgBG,KAAKC,MAAM/B,EAAMmC,OAAjC,SAEF,yBAAKR,UAAU,QACb,uBAAGA,UAAWjB,KAEhB,yBAAKiB,UAAU,eACb,2BAAI3B,EAAMoC,kBChBPC,E,2MA3EbC,MAAQ,CACNC,IAAK,KACLC,IAAK,KACLC,aAAc,GACdZ,UAAMhB,EACNqB,iBAAarB,EACb6B,cAAU7B,EACVuB,iBAAavB,EACbE,eAAWF,G,EAeb8B,mBAAqB,SAAMC,GAAN,iBAAAC,EAAAC,OAAA,sDACP,mCADO,WAAAD,EAAA,MAEGE,MAAM,sDAAD,OAC6B,EAAKT,MAAMC,IADxC,gBACmD,EAAKD,MAAME,IAD9D,kBADf,mCACe,mBAFR,cAEbQ,EAFa,kBAAAH,EAAA,MAKAG,EAAQC,QALR,OAKbC,EALa,YAOKrC,IAApB,EAAKyB,MAAMT,MAAuB,EAAKS,MAAMG,cAC/C,EAAKU,SAAS,CACZtB,KAAMqB,EAAKE,KACXlB,YAAagB,EAAKG,KAAKC,KACvBtB,KAAMkB,EAAKG,KAAKE,SAChBtB,IAAKiB,EAAKG,KAAKG,SACfrB,MAAOe,EAAKG,KAAKI,WACjBrB,YAAac,EAAKQ,QAAQ,GAAGtB,YAC7BrB,UAAWmC,EAAKQ,QAAQ,GAAGL,OAfZ,sC,mFAZA,IAAD,OAClBM,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GACE,EAAKZ,SAAS,CACZZ,IAAKwB,EAASC,OAAOC,SACrBzB,IAAKuB,EAASC,OAAOE,eAGzB,SAAAC,GAAG,OAAI,EAAKhB,SAAS,CAAEV,aAAc0B,EAAIlE,e,sCAyB3C,OAAImE,KAAK9B,MAAMG,cAAiB2B,KAAK9B,MAAMC,KAAQ6B,KAAK9B,MAAME,KAIzD4B,KAAK9B,MAAMG,cAAgB2B,KAAK9B,MAAMC,KAAO6B,KAAK9B,MAAME,IAEzD,6BACE,kBAAC,EAAD,CACEX,KAAMuC,KAAK9B,MAAMT,KACjBK,YAAakC,KAAK9B,MAAMJ,YACxBF,KAAMoC,KAAK9B,MAAMN,KACjBC,IAAKmC,KAAK9B,MAAML,IAChBE,MAAOiC,KAAK9B,MAAMH,MAClBC,YAAagC,KAAK9B,MAAMF,YACxBrB,UAAWqD,KAAK9B,MAAMvB,aAM1B,6BACE,kBAAC,EAAD,CAASd,QAAQ,oCApBd,uCAAamE,KAAK9B,MAAMG,gB,+BA0BjC,OAAO,6BAAM2B,KAAKC,qB,GAxEJC,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.b9c82d48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clearday.6bdfa5da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clearnight.69fd96fd.JPG\";","module.exports = __webpack_public_path__ + \"static/media/thunder.eeb75134.JPG\";","module.exports = __webpack_public_path__ + \"static/media/drizzleday.ae4b352b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/drizzlenight.702eba1d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/rainday.f92070c6.JPG\";","module.exports = __webpack_public_path__ + \"static/media/rainnight.03654807.JPG\";","module.exports = __webpack_public_path__ + \"static/media/snowday.662cf103.JPG\";","module.exports = __webpack_public_path__ + \"static/media/snownight.5e1a0f63.JPG\";","module.exports = __webpack_public_path__ + \"static/media/cloudday.091b8dfb.JPG\";","module.exports = __webpack_public_path__ + \"static/media/cloudnight.28ef48a2.JPG\";","import React from \"react\";\r\n\r\nconst style = {\r\n  backgroundColor: \"#404040\",\r\n  color: \"white\",\r\n  height: \"100vh\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n};\r\n\r\nconst Spinner = props => {\r\n  return <div style={style}>{props.message}</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./Weather.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport clearday from \"../images/clearday.jpg\";\r\nimport clearnight from \"../images/clearnight.JPG\";\r\nimport thunder from \"../images/thunder.JPG\";\r\nimport drizzleday from \"../images/drizzleday.JPG\";\r\nimport drizzlenight from \"../images/drizzlenight.JPG\";\r\nimport rainday from \"../images/rainday.JPG\";\r\nimport rainnight from \"../images/rainnight.JPG\";\r\nimport snowday from \"../images/snowday.JPG\";\r\nimport snownight from \"../images/snownight.JPG\";\r\nimport cloudday from \"../images/cloudday.JPG\";\r\nimport cloudnight from \"../images/cloudnight.JPG\";\r\n\r\nconst time = new Date().getHours();\r\nconst today = new Date();\r\nconst options = {\r\n  weekday: \"long\",\r\n  month: \"long\",\r\n  day: \"numeric\"\r\n};\r\nlet icon = \"\";\r\nlet background = { backgroundImage: `url(${undefined})` };\r\n\r\nconst Weather = props => {\r\n  if (props.condition === \"Thunderstorm\") {\r\n    icon = \"fas fa-bolt\";\r\n    background = { backgroundImage: `url(${thunder})` };\r\n  } else if (props.condition === \"Drizzle\") {\r\n    if (time >= 7 && time <= 19) {\r\n      icon = \"fas fa-cloud-sun\";\r\n      background = { backgroundImage: `url(${drizzleday})` };\r\n    } else {\r\n      icon = \"fas fa-cloud-moon-rain\";\r\n      background = { backgroundImage: `url(${drizzlenight})` };\r\n    }\r\n  } else if (props.condition === \"Rain\") {\r\n    if (time >= 7 && time <= 19) {\r\n      icon = \"fas fa-cloud-showers-heavy\";\r\n      background = { backgroundImage: `url(${rainday})` };\r\n    } else {\r\n      icon = \"fas fa-cloud-moon-rain\";\r\n      background = { backgroundImage: `url(${rainnight})` };\r\n    }\r\n  } else if (props.condition === \"Snow\") {\r\n    if (time >= 7 && time <= 19) {\r\n      icon = \"fas fa-snowflake\";\r\n      background = { backgroundImage: `url(${snowday})` };\r\n    } else {\r\n      icon = \"fas fa-snowflake\";\r\n      background = { backgroundImage: `url(${snownight})` };\r\n    }\r\n  } else if (props.condition === \"Clouds\") {\r\n    if (time >= 7 && time <= 19) {\r\n      icon = \"fas fa-cloud\";\r\n      background = { backgroundImage: `url(${cloudday})` };\r\n    } else {\r\n      icon = \"fas fa-cloud-moon\";\r\n      background = { backgroundImage: `url(${cloudnight})` };\r\n    }\r\n  } else {\r\n    if (time >= 7 && time <= 19) {\r\n      icon = \"fas fa-sun\";\r\n      background = { backgroundImage: `url(${clearday})` };\r\n    } else {\r\n      icon = \"fas fa-moon\";\r\n      background = { backgroundImage: `url(${clearnight})` };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={background}>\r\n      <div className=\"main\">\r\n        <div className=\"date\">\r\n          <p>{today.toLocaleDateString(\"en-US\", options)}</p>\r\n        </div>\r\n        <div className=\"weather\">\r\n          <div className=\"city\">\r\n            <h2>{props.city}</h2>\r\n          </div>\r\n          <div className=\"high-low\">\r\n            <p>\r\n              High: {Math.round(props.high)} | Low: {Math.round(props.low)}\r\n            </p>\r\n          </div>\r\n          <div className=\"temperature\">\r\n            <h1>{Math.round(props.temperature)}°C</h1>\r\n          </div>\r\n          <div className=\"feels\">\r\n            <p>Feels like: {Math.round(props.feels)}°</p>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <i className={icon}></i>\r\n          </div>\r\n          <div className=\"description\">\r\n            <p>{props.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport Weather from \"./Weather\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    lat: null,\r\n    lon: null,\r\n    errorMessage: \"\",\r\n    city: undefined,\r\n    temperature: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n    condition: undefined\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        });\r\n      },\r\n      err => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  componentDidUpdate = async e => {\r\n    const KEY = \"bb8e6e0b5b2c5fe4f165e455e9e53400\";\r\n    const apiCall = await fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=${KEY}&units=metric`\r\n    );\r\n    const data = await apiCall.json();\r\n\r\n    if (this.state.city === undefined && !this.state.errorMessage) {\r\n      this.setState({\r\n        city: data.name,\r\n        temperature: data.main.temp,\r\n        high: data.main.temp_max,\r\n        low: data.main.temp_min,\r\n        feels: data.main.feels_like,\r\n        description: data.weather[0].description,\r\n        condition: data.weather[0].main\r\n      });\r\n    }\r\n  };\r\n\r\n  renderContent() {\r\n    if (this.state.errorMessage && !this.state.lat && !this.state.lon) {\r\n      return <div>Error: {this.state.errorMessage}</div>;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.lat && this.state.lon) {\r\n      return (\r\n        <div>\r\n          <Weather\r\n            city={this.state.city}\r\n            temperature={this.state.temperature}\r\n            high={this.state.high}\r\n            low={this.state.low}\r\n            feels={this.state.feels}\r\n            description={this.state.description}\r\n            condition={this.state.condition}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Spinner message=\"Please accept location request\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return <div>{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}